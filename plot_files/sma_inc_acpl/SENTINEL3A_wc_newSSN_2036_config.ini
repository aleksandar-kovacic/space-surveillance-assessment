[path]
# define the path where to save the input parameters and the name of the file
#ares_config_path = plot_files/single_line_plots/ares_config_worst-casenewSSN_2036.ini
ares_config_path = plot_files/sma_inc_acpl/SENTINEL3A_wc_newSSN_2036_config.ini
# define the path where to save the output values
ares_output = plot_files/sma_inc_acpl/SENTINEL3A_wc_newSSN_2036.csv

[acpl]
# ACPL = Accepted Collision Probability Level. Number of ACPL values to be analyzed (acpl_steps). Division is done via logarithmic scale: numpy.logspace(acpl_min_order, acpl_max_order, acpl_steps)
# 0.99 = -4.364805402e-3   0.9 = -0.04575749056   #0.999 = -4.34511774e-4
acpl_min_order = -4
acpl_max_order = -2
# number of steps as integer
acpl_steps = 1



[additional_parameters]
# Earth  radius
_R_EARTH = 6378.137

# provide a single value or multiple values for the reference diamater, which describes the detection performance of the radar equation (see ARES Technical Note)
d_ref = 0.1



[parameters]
# Note 1:    You can choose to vary up to TWO parameters from the following list. This is done by providing a list of values for the parameter of interest.
#            e.g. altitude = 505, 705, 805 AND inc = 85, 89, 95
# Note 2:    In case of choosing to perform dependent variable computations, it is possible to provide a list for two more parameters.
#            e.g. altitude = 505, 705, 805 AND inc = 85, 89, 95 AND dependent variables: particle_size_min = [0.01, 0.03, 0.06] AND particle_size_max = [0.03, 0.06, 0.09]

# Functionality
# The Functionality drop-down list allows to choose one of the four ARES functionalities:
#  1: Collision Probability Computation
#  2: Avoidance Schemes Assessment
#  3: Required Delta-V
#  4: Required Propellant
# It should be noted that the execution of any functionality implies the execution of all previous functionalities. For example, when choosing 
# functionality 3, the output from functionalities 1 and 2 will also be computed and presented to the user.
functionality = 2

# Particle Size / m
#particle_size_min_list = [0.01, 0.01122, 0.01413, 0.01778, 0.02239, 0.02818, 0.03548, 0.04467, 0.05623, 0.07079, 0.08912, 0.11220, 0.14125, 0.17783, 0.22387, 0.28184, 0.35481, 0.44668, 0.56234, 0.70795, 0.89125, 1.12202, 1.41254, 1.77828, 2.23872, 2.81838, 3.54813, 4.46684, 5.62341, 7.07946, 8.91251, 11.22019, 14.12538, 17.78279, 22.38721, 28.18383, 35.48134, 44.66836, 56.23413, 70.79458, 89.12509]
#particle_size_max_list = [0.01122, 0.01413, 0.01778, 0.02239, 0.02818, 0.03548, 0.04467, 0.05623, 0.07079, 0.08912, 0.11220, 0.14125, 0.17783, 0.22387, 0.28184, 0.35481, 0.44668, 0.56234, 0.70795, 0.89125, 1.12202, 1.41254, 1.77828, 2.23872, 2.81838, 3.54813, 4.46684, 5.62341, 7.07946, 8.91251, 11.22019, 14.12538, 17.78279, 22.38721, 28.18383, 35.48134, 44.66836, 56.23413, 70.79458, 89.12509, 100]

#particle_size_min_list = [0.01, 0.01413, 0.01778, 0.02239, 0.02818, 0.03548, 0.04467, 0.05623, 0.07079, 0.08912, 0.11220, 0.14125, 0.17783, 0.22387, 0.28184, 0.35481, 0.44668, 0.56234, 0.70795, 0.89125, 1.12202, 1.41254, 1.77828, 2.23872, 2.81838, 3.54813, 4.46684, 5.62341, 7.07946, 8.91251, 11.22019, 14.12538, 17.78279, 22.38721, 28.18383, 35.48134, 44.66836, 56.23413, 70.79458, 89.12509]
#particle_size_max_list = [0.01413, 0.01778, 0.02239, 0.02818, 0.03548, 0.04467, 0.05623, 0.07079, 0.08912, 0.11220, 0.14125, 0.17783, 0.22387, 0.28184, 0.35481, 0.44668, 0.56234, 0.70795, 0.89125, 1.12202, 1.41254, 1.77828, 2.23872, 2.81838, 3.54813, 4.46684, 5.62341, 7.07946, 8.91251, 11.22019, 14.12538, 17.78279, 22.38721, 28.18383, 35.48134, 44.66836, 56.23413, 70.79458, 89.12509, 100]

#particle_size_min_list = [0.01, 0.01778, 0.02239, 0.02818, 0.03548, 0.04467, 0.05623, 0.07079, 0.08912, 0.11220, 0.14125, 0.17783, 0.22387, 0.28184, 0.35481, 0.44668, 0.56234, 0.70795, 0.89125, 1.12202, 1.41254, 1.77828, 2.23872, 2.81838, 3.54813, 4.46684, 5.62341, 7.07946, 8.91251, 11.22019, 14.12538, 17.78279, 22.38721, 28.18383, 35.48134, 44.66836, 56.23413, 70.79458, 89.12509]
#particle_size_max_list = [0.01778, 0.02239, 0.02818, 0.03548, 0.04467, 0.05623, 0.07079, 0.08912, 0.11220, 0.14125, 0.17783, 0.22387, 0.28184, 0.35481, 0.44668, 0.56234, 0.70795, 0.89125, 1.12202, 1.41254, 1.77828, 2.23872, 2.81838, 3.54813, 4.46684, 5.62341, 7.07946, 8.91251, 11.22019, 14.12538, 17.78279, 22.38721, 28.18383, 35.48134, 44.66836, 56.23413, 70.79458, 89.12509, 100]

#particle_size_min_list = [0.01, 0.02239, 0.02818, 0.03548, 0.04467, 0.05623, 0.07079, 0.08912, 0.11220, 0.14125, 0.17783, 0.22387, 0.28184, 0.35481, 0.44668, 0.56234, 0.70795, 0.89125, 1.12202, 1.41254, 1.77828, 2.23872, 2.81838, 3.54813, 4.46684, 5.62341, 7.07946, 8.91251, 11.22019, 14.12538, 17.78279, 22.38721, 28.18383, 35.48134, 44.66836, 56.23413, 70.79458, 89.12509]
#particle_size_max_list = [0.02239, 0.02818, 0.03548, 0.04467, 0.05623, 0.07079, 0.08912, 0.11220, 0.14125, 0.17783, 0.22387, 0.28184, 0.35481, 0.44668, 0.56234, 0.70795, 0.89125, 1.12202, 1.41254, 1.77828, 2.23872, 2.81838, 3.54813, 4.46684, 5.62341, 7.07946, 8.91251, 11.22019, 14.12538, 17.78279, 22.38721, 28.18383, 35.48134, 44.66836, 56.23413, 70.79458, 89.12509, 100]

#particle_size_min_list = [0.01]
#particle_size_max_list = [100]

#particle_size_min_list = [0.01, 0.70795, 0.01413, 4.46684]
#particle_size_max_list = [0.01122, 0.89125, 0.01778, 5.62341]

# Standard: "particle_size_min": 0.01
particle_size_min = 0.01
# Standard: "particle_size_min": 100
particle_size_max = 100

# Surveillance radar wavelength [m]. Space Fence works in S-Band i.e. radar_wavelength = 0.075m-0.15m
radar_wavelength = 0.075

# Energy-to-Mass ratio switch
# Set to 1 to perform catastrophic collision risk computations, 0 otherwise
EMR_switch = 0

# Minimum Energy-to-Mass ratio [J/g] (>0)
min_EMR_ratio = 40

# Spacecraft mass [kg] (>0)
mass = 1250

# Spacecraft radius [m] (>0)
#Swarm B = 4.55
spacecraft_radius = 3.45

# Altitude [km] (>0)
#altitude Swarm B = 505km
#altitude = 200, 300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200
#altitude = 200, 400, 600, 800, 1000, 1200, 1400, 1600, 1800, 2000
#altitude = 500, 600, 700, 800, 900, 1000
altitude = 200, 300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200

# Inclination [째]
#inc_list = 0, 15, 30, 45, 60, 75, 90, 105, 120, 135, 150, 165, 180
#inc_list = 0, 30, 60, 90, 120, 150, 180
#inc_list = 0, 7.5, 15, 22.5, 30, 37.5, 45, 52.5, 60, 67.5, 75, 82.5, 90, 97.5, 105
#inc_list = 0, 15, 30, 45, 60, 75, 90
#inc_list = 85, 87.5, 90, 92.5, 95
#inc = 0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120, 130, 140, 150, 160, 170, 180
#Swarm B inclination = 87.75
#Sentinel-3A = 98.6204째
inc = 0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120, 130, 140, 150, 160, 170, 180

# Eccentricity (0-1)
# SwarmB = 3.28e-4
ecc = 0.00011490

# Right Ascension of Ascending Node [째]
# SwarmB = 76.4433
raan = 280.2164

# Argument of Perigee [째]
#SwarmB = 92.5926
aop = 97.7552

#Analysis Reference Date:
#Provide a single epoch or a list of epochs in form of integer numbers for year, month and day e.g.:    #year =  2021,   2016,  2014
                                                                                                        #month = 11,     11,    11 
                                                                                                        #day =   1,      1,     1
year =  2036
month = 11
day =   1

# Spacecraft Uncertainty Type: uncertainty_type: 1 = user-entered uncertainties (along, cross, radial), uncertainty_type: 2 = catalogue uncertainties
uncertainty_type = 2

# Along-track uncertainty [km] (>0)
#0.2
uncertainty_along = 1

# Cross-track uncertainty [km] (>0)
#1
uncertainty_cross = 1

# Radial uncertainty [km] (>0)
#0.075
uncertainty_radial = 1

# Time between event prediction and event-occurance (TCA - Time to closest approach) [days] (>0; <7) 
lead_time = 1

#type_of_catalogue: 1 = CDM data, 2 = user-defined covariances (covariance_matrix)
type_of_catalogue = 1

# scaling_factor: int-number = global scaling factor, negative value = user-defined scaling factors (scaling_factor_table)
# Global scaling factor/switch for Debris Position Uncertainties. Allows you to apply a scaling factor to the uncertainties.
# ARES offers 2 choices:
#  1:   Define a global scaling factor (the same scaling factor will be applied to all the values in the covariance_matrix (see below). 
#       To define a global scaling value, set its value.
#  2:   Define a different scaling factor for each of the orbit groups. That makes: 3 sizes* 2 eccentricities* 6 perigee heights*6 inclinations = 216 scaling factors. See below in scaling_factor_table
#       To use the user-provided scaling factors table, set this switch to a negative value 
# Its default value must be 1 (which means no scaling at all)
scaling_factor = -1

# Collision Probability Algorithm: 0 = Alfriend & Akella (default), 1 = Maximum Collision Probability
collision_probability_alogrithm = 0

# Avoidance Manoeuvre Criteria
# 0 = Target Collision Probability Level (scaling factor applied to ACPL)
# 1 = Allowed Minimum Miss Distance (km)
# 2 = Both Target CP and AMD
avoidance_manoeuvre_criteria = 0

# Target Collision Probability Level (scaling factor applied to ACPL)
# Values within interval [1.D-5,1] Only if Avoidance Manoeuvre Criteria = 1
target_collision_probability_level = 0.1

# Allowed Minimum Miss Distance  (>0)
allowed_minimum_miss_distance = 1.5

[parallel_computation]
#Want to perform parallel computation? True = Yes / False = No
parallel = True

[dependent_variables]
#Want to perform dependent variable computation? True = Yes / False = No
dependent_variable_mode = False
variable_1 = particle_size_min
variable_2 = particle_size_max



[debris_uncertainty]
# You may provide your own covariance data here. The following lines must be present, even if you do not want to use them.
# The data layout is the one shown in the table below. Each row in this input file matches a row in the table
# User-entered covariances (units are km):
#+-----------------+----------+----------+----------+----------+----------+----------+
#| Small objects   |    i1    |    i2    |   i3     |    i4    |   i5     |    i6    |
#|-----------------+----------+----------+----------+----------+----------+----------|
#|         | hp 1  | AT CT RA | AT CT RA | AT CT RA | AT CT RA | AT CT RA | AT CT RA |
#|         |-------+----------+----------+----------+----------+----------+----------|
#|         | hp 2  |   ...    |   ...    |   ...    |   ...    |   ...    |   ...    |
#|         |-------+----------+----------+----------+----------+----------+----------|
#| e < 0.1 | hp 3  |   ...    |   ...    |   ...    |   ...    |   ...    |   ...    |
#|         |-------+----------+----------+----------+----------+----------+----------|
#|         | hp 4  |   ...    |   ...    |   ...    |   ...    |   ...    |   ...    |
#|         |-------+----------+----------+----------+----------+----------+----------|
#|         | hp 5  |   ...    |   ...    |   ...    |   ...    |   ...    |   ...    |
#|         |-------+----------+----------+----------+----------+----------+----------|
#|         | hp 6  |   ...    |   ...    |   ...    |   ...    |   ...    |   ...    |
#|---------+-------+----------+----------+----------+----------+----------+----------|
#|         | hp 1  |   ...    |   ...    |   ...    |   ...    |   ...    |   ...    |
#|         |-------+----------+----------+----------+----------+----------+----------|
#|         | hp 2  |   ...    |   ...    |   ...    |   ...    |   ...    |   ...    |
#|         |-------+----------+----------+----------+----------+----------+----------|
#| e > 0.1 | hp 3  |   ...    |   ...    |   ...    |   ...    |   ...    |   ...    |
#|         |-------+----------+----------+----------+----------+----------+----------|
#|         | hp 4  |   ...    |   ...    |   ...    |   ...    |   ...    |   ...    |
#|         |-------+----------+----------+----------+----------+----------+----------|
#|         | hp 5  |   ...    |   ...    |   ...    |   ...    |   ...    |   ...    |
#|         |-------+----------+----------+----------+----------+----------+----------|
#|         | hp 6  |   ...    |   ...    |   ...    |   ...    |   ...    |   ...    |
#|---------+-------+----------+----------+----------+----------+----------+----------|

"""covariance_matrix =
    1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2,
    1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2,
    1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2,
    1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2,
    1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2,
    1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2,
    1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2,
    1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2,
    1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2,
    1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2,
    1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2,
    1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2,
    1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2,
    1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2,
    1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2,
    1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2,
    1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2,
    1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2,
    1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2,
    1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2,
    1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2,
    1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2,
    1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2,
    1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2,
    1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2,
    1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2,
    1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2,
    1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2,
    1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2,
    1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2,
    1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2,
    1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2,
    1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2,
    1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2,
    1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2,
    1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2, 1.0, 0.4, 0.2"""

covariance_matrix =
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0

# Scale the entire covariance matrix by a factor (1 means no scaling at all). Important: Dont provide simultaneously a scaling factor through the 
# covaraince_matrix_factor and the scaling_factor_table. This would result in a double scaling. Keep the covaraince_matrix_factor = 1 if scaling_factor
# is a negative number
covariance_matrix_factor = 1

# Scaling factors table
scaling_factor_table =
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0

#0.5, 0.6, 0.7, 0.8, 0.9, 1, 1.1, 1.2, 1.3, 1.4, 1.5
scaling_factor_list = 2

#Define which areas of the scaling_factor_table should be changed to the scaling_factors in the scaling_factor_list in the form of:
#scaling_factor_table[a:b, c:d] = scaling_factor
#scaling_factor_table[e:f, g:h] = scaling_factor
#scaling_factor_table[i:j, k:l] = scaling_factor
#E.g.:
#scaling_factor_table[0:4, 0:6] = scaling_factor
#scaling_factor_table[12:16, 0:6] = scaling_factor
#scaling_factor_table[24:28, 0:6] = scaling_factor
a=0
b=4 
c=0
d=6

e=12
f=16
g=0
h=6

i=24
j=28
k=0
l=6
